#summary One-sentence summary of this page.
#labels Featured

#summary A Complete Chat Example
= A Complete Chat Example =

This complete example includes all client and server side code required to implement a simple group chat system. See the complete [http://code.google.com/p/gwt-comet/source/browse/#svn/trunk/src/net/zschech/gwt/chat source code].

== Client Side ==

The [http://code.google.com/p/gwt-comet/source/browse/#svn/trunk/src/net/zschech/gwt/chat/client client package] includes:
 # An [http://code.google.com/p/gwt-comet/source/browse/trunk/src/net/zschech/gwt/chat/client/ChatEntryPoint.java chat entry point] which sets up a simple gui for logging in, setting your status, and sending messages.
 # A [http://code.google.com/p/gwt-comet/source/browse/trunk/src/net/zschech/gwt/chat/client/ChatService.java chat remote service] and associated message classes etc which the client uses to interact with the server.

== Server Side ==

The [http://code.google.com/p/gwt-comet/source/browse/#svn/trunk/src/net/zschech/gwt/chat/server server package] includes:
 # An implementation of the [http://code.google.com/p/gwt-comet/source/browse/trunk/src/net/zschech/gwt/chat/server/ChatServiceImpl.java chat remote service].
 # The map of logged in users used to manage message routing.

=== web.xml ===

{{{
<web-app>
  <!-- the RPC service called by the client -->
  <servlet>
    <servlet-name>chatService</servlet-name>
    <servlet-class>net.zschech.gwt.chat.server.ChatServiceImpl</servlet-class>
  </servlet>
  <!-- the comet servlet for streaming messages to the client -->
  <servlet>
    <servlet-name>chatComet</servlet-name>
    <servlet-class>net.zschech.gwt.comet.server.CometServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>chatService</servlet-name>
    <url-pattern>/net.zschech.gwt.chat.Chat/chat</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>chatComet</servlet-name>
    <url-pattern>/net.zschech.gwt.chat.Chat/comet</url-pattern>
  </servlet-mapping>
</web-app>
}}}